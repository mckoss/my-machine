#!/bin/bash

# Test a device with snmpwalk -v1 -c public x.x.x.x

SECS=5

IMPRESYS="67.136.217.101"
ROUTERS=$*

if [ -z "$ROUTERS" ]; then
    ROUTERS="mckoss.dyndns.org office.startpad.org $IMPRESYS mawgrammy.dyndns.org"
fi

echo "Polling routers: $ROUTERS"
echo "Warning: COMCAST blocks SNMP (port 161), so this script may fail on non-LAN requests."

# I don't have the MIB database on latest Ubuntu (argh!)
ifInOctets="iso.3.6.1.2.1.2.2.1.10"
ifOutOctets="iso.3.6.1.2.1.2.2.1.16"
sysName="iso.3.6.1.2.1.1.5.0"
upTime="iso.3.6.1.2.1.1.3.0"

. ~/.sprouters 2>/dev/null
if [ -z $SECRET ]; then
    echo -n "Community string: "
    stty -echo
    read SECRET
    stty echo
    echo
    echo "SECRET=$SECRET" > ~/.sprouters
fi


VAL="s/^.*: \(.*\)/\1/"

function track {
    LABEL=$1; shift
    CTR=$1; shift
    VAR_NAME=$1; shift

    echo track $IP

    if [ -z ${!VAR_NAME} ]; then eval ${VAR_NAME}=0; fi

    BYTES=`snmpget -v1 -c $COMMUNITY $IP ${CTR}.$IF | sed -e "$VAL"`
    if [ ${!VAR_NAME} != 0 ]; then
        printf "$LABEL %'d kbps\n" $(( ($BYTES - ${!VAR_NAME})/$SECS/100 ))
    fi
    eval ${VAR_NAME}=$BYTES
}

function trackpair {
    NAME=$1; shift
    IP=$1; shift
    COMMUNITY=$1; shift
    IF=$1; shift

    track "$IP UP" $ifInOctets ${NAME}_UP
    track "$IP DOWN" $ifOutOctets ${NAME}_DOWN
}

function uptime {
    IP=$1; shift
    COMMUNITY=$1; shift

    echo uptime $IP

    NAME=`snmpget -v1 -c $COMMUNITY $IP $sysName | sed -e "$VAL"`
    UPTIME=`snmpget -v1 -c $COMMUNITY $IP $upTime | sed -e "$VAL"`
    printf "$NAME: $UPTIME\n"
}

for ROUTER in $ROUTERS ; do
    uptime $ROUTER $SECRET
done

while true; do
    N=1
    for ROUTER in $ROUTERS ; do
        echo router $ROUTER
        trackpair "V${N}" $ROUTER $SECRET 7
    done
    N=$((N + 1))
    sleep $SECS
    echo =====================
done
