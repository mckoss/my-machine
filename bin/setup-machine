#!/bin/bash
BIN_DIR="$(cd `dirname $0` && pwd)"
source $BIN_DIR/.envrc
source $BIN_DIR/setup-funcs.sh

mkdir -p $HOME/bin
mkdir -p $HOME/tmp
mkdir -p $HOME/.ssh

read -p "Install Oracle Java? (y/N): "
if [ "$REPLY" == "y" ]; then
    sudo apt-add-repository ppa:webupd8team/java
    get_pkgs update
    sudo apt-get update
    get_pkgs oracle-java7-installer
fi

read -p "Install Python dev? (y/N): "
if [ "$REPLY" == "y" ]; then
    get_pkgs build-essential
    get_pkgs python-software-properties
    get_pkgs python-dev
fi

read -p "Install Node.js? (y/N): "
if [ "$REPLY" == "y" ]; then
    sudo add-apt-repository ppa:chris-lea/node.js
    sudo apt-get update
    sudo apt-get install nodejs npm
    : sudo apt-get install nodejs-dev
fi

read -p "Install Google Chrome? (y/N): "
if [ "$REPLY" == 'y' ]; then
    get_pkgs google-chrome-stable
fi

if [ $PLATFORM == "Linux" ]; then
    get_pkgs aptitude curl fping emacs23-nox openssh-server tree ack-grep screen
    get_pkgs python-pip python-virtualenv
    get_pkgs git mercurial
    get_pkgs make unzip
    get_pkgs s3cmd
    if [ ! -f "$HOME/.s3cfg" ]; then
        s3cmd --configure
    fi
fi

ensure_py pep8
ensure_py pylint

if [ "$(git config --global user.name)" == "" ]; then
    read -p "Git Fullname: "
    git config --global user.name "$REPLY"
    read -p "Git Email: "
    git config --global user.email "$REPLY"
fi

for config in $PROJ_DIR/home/.* ; do
    [ -d $config ] && continue
    base="$(basename $config)"
    if [ ! -e "$HOME/$base" ]; then
        echo Adding $base config file.
        ln -s $config $HOME/$base
        continue
    fi

    if [ ! -h "$HOME/$base" ]; then
        read -p "$base exists - replace? (y/N):"
        if [ "$REPLY" == "y" ]; then
            ln -sf $config $HOME/$base
        fi
    else
        echo Config file $base already linked.
    fi
done

for file in $PROJ_DIR/ssh/* ; do
    [ -d $file ] && continue
    base="$(basename $file)"
    if [ ! -e "$HOME/.ssh/$base" ]; then
        echo Adding $base security file.
        cp $file $HOME/.ssh/$base
        continue
    else
        echo $HOME/.ssh/$base already exists ... skipping.
    fi
done
